#!/usr/bin/env python3

import argparse
parser = argparse.ArgumentParser()
parser.add_argument("-o", "--output", dest="output", required=True)
parser.add_argument("-i", "--input", dest="input", required=True)
args = parser.parse_args()

import json
with open(args.input) as f:
	techfile = json.load(f)

of = open(args.output, "w+")

tech_home = "$(OBJ_TECH_DIR)/extracted"

of.write("TECHNOLOGY_LIBERTY_FILES =")
for library_desc in techfile["libraries"]:
	if "liberty file" in library_desc:
		of.write(" {0}/{1}".format(tech_home, library_desc["liberty file"]))
of.write("\n")

of.write("TECHNOLOGY_VERILOG_FILES =")
for library_desc in techfile["libraries"]:
	if "verilog file" in library_desc:
		of.write(" {0}/{1}".format(tech_home, library_desc["verilog file"]))
of.write("\n")

of.write("TECHNOLOGY_MILKYWAY_LIB_IN_DIRS =")
for library_desc in techfile["libraries"]:
	if "milkyway lib in dir" in library_desc:
		of.write(" {0}/{1}".format(tech_home, library_desc["milkyway lib in dir"]))
of.write("\n")

of.write("TECHNOLOGY_TLUPLUS_FILES =")
for library_desc in techfile["libraries"]:
	if "tlu+ files" in library_desc:
		of.write(" {0}/{1}".format(tech_home, library_desc["tlu+ files"]["min cap"]))
		of.write(" {0}/{1}".format(tech_home, library_desc["tlu+ files"]["max cap"]))
of.write("\n")

of.write("TECHNOLOGY_MILKYWAY_TECHFILES =")
for library_desc in techfile["libraries"]:
	if "milkyway techfile" in library_desc:
		of.write(" {0}/{1}".format(tech_home, library_desc["milkyway techfile"]))
of.write("\n")

of.write("TECHNOLOGY_CCS_LIBRARY_FILES =")
for library_desc in techfile["libraries"]:
	if "ccs library file" in library_desc:
		of.write(" {0}/{1}".format(tech_home, library_desc["ccs library file"]))
of.write("\n")

of.write("TECHNOLOGY_MARCO_PROVIDE_SCRIPTS =")
for library_desc in techfile["libraries"]:
	if "provide script" in library_desc:
		of.write(" {0}".format(library_desc["provide script"]))
of.write("\n")
